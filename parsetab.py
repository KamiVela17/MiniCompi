
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQDISTleftMNQMYQMNIQMYIQleftMASMENOSleftMULTIDIVICIC_DO CIC_FOR CIC_WHILE COMA COMILLA COND_IF COND_THEN DIST DIVI DOUBLE EQ ID IGUAL INTEGER LLAVE_ABRE LLAVE_CIERRA MAS MENOS MNIQ MNQ MULTI MYIQ MYQ NUM_DOUBLE NUM_INTEGER PAREN_ABRE PAREN_CIERRA PRINCIPAL PRINTLN STRING TOKEN_ASIGprogram : PRINCIPAL ID LLAVE_ABRE cuerpo LLAVE_CIERRAcuerpo : declaracion cuerpo2\n              | asig cuerpo2\n              | println cuerpo2\n              | para cuerpo2\n              | sif cuerpo2\n              | dhacer cuerpo2\n              | res cuerpo2\n              | emptycuerpo2 : cuerpo\n               | emptydeclaracion : tipod asigtipod : INTEGER\n             | DOUBLE\n             | STRINGprintln : PRINTLN idnum TOKEN_ASIGasig : ID tipoasig masasig TOKEN_ASIGtipoasig : IGUAL idnum\n                | IGUAL COMILLA ID COMILLAidnum : num\n             | IDnum : NUM_INTEGER\n           | NUM_DOUBLEmasasig : COMA asig masasig\n               | oparit idnum masasig\n               | emptypara : CIC_FOR PAREN_ABRE condicionpara PAREN_CIERRA LLAVE_ABRE cuerpo LLAVE_CIERRAcondicionpara : inicio TOKEN_ASIG fin TOKEN_ASIG indecinicio : ID IGUAL idnumfin : ID oprel idnumindec : idnum MAS MAS\n             | idnum MENOS MENOSsif : COND_IF PAREN_ABRE condicion PAREN_CIERRA COND_THEN LLAVE_ABRE cuerpo LLAVE_CIERRAdhacer : CIC_DO LLAVE_ABRE cuerpo LLAVE_CIERRA CIC_WHILE PAREN_ABRE condicion PAREN_CIERRAres : idnum oparit idnumcondicion : ID oprel mascondicionmascondicion : idnum oprel mascondicion\n                    | idnumoparit : MAS\n              | MENOS\n              | MULTI\n              | DIVIoprel : MNQ\n             | MYQ\n             | MNIQ\n             | MYIQ\n             | EQ\n             | DISTempty :'
    
_lr_action_items = {'MULTI':([8,11,21,22,24,31,48,59,78,79,80,89,],[-23,38,-21,-22,-20,-21,38,-18,-17,38,38,-19,]),'DIST':([8,22,24,31,52,83,87,],[-23,-22,-20,-21,67,67,67,]),'MYIQ':([8,22,24,31,52,83,87,],[-23,-22,-20,-21,70,70,70,]),'COND_IF':([4,8,9,10,12,13,17,22,24,25,26,27,31,45,53,54,78,85,92,101,105,106,],[6,-23,6,6,6,6,6,-22,-20,6,6,-12,-21,6,-16,-35,-17,6,6,-27,-33,-34,]),'IGUAL':([21,28,58,],[47,47,76,]),'PAREN_ABRE':([6,20,84,],[29,46,94,]),'CIC_WHILE':([73,],[84,]),'PRINTLN':([4,8,9,10,12,13,17,22,24,25,26,27,31,45,53,54,78,85,92,101,105,106,],[7,-23,7,7,7,7,7,-22,-20,7,7,-12,-21,7,-16,-35,-17,7,7,-27,-33,-34,]),'NUM_DOUBLE':([4,7,8,9,10,12,13,17,22,24,25,26,27,31,36,37,38,39,40,45,47,53,54,64,66,67,68,69,70,71,72,76,78,85,92,93,96,97,101,105,106,],[8,8,-23,8,8,8,8,8,-22,-20,8,8,-12,-21,-39,-42,-41,-40,8,8,8,-16,-35,8,-45,-48,-44,8,-46,-43,-47,8,-17,8,8,8,8,8,-27,-33,-34,]),'MYQ':([8,22,24,31,52,83,87,],[-23,-22,-20,-21,68,68,68,]),'MNQ':([8,22,24,31,52,83,87,],[-23,-22,-20,-21,71,71,71,]),'INTEGER':([4,8,9,10,12,13,17,22,24,25,26,27,31,45,53,54,78,85,92,101,105,106,],[14,-23,14,14,14,14,14,-22,-20,14,14,-12,-21,14,-16,-35,-17,14,14,-27,-33,-34,]),'LLAVE_CIERRA':([4,8,9,10,12,13,15,17,18,22,24,25,26,27,31,32,33,34,35,41,42,43,45,49,50,53,54,55,78,85,92,95,98,101,105,106,],[-49,-23,-49,-49,-49,-49,-9,-49,44,-22,-20,-49,-49,-12,-21,-3,-9,-10,-8,-7,-6,-5,-49,-2,-4,-16,-35,73,-17,-49,-49,101,105,-27,-33,-34,]),'EQ':([8,22,24,31,52,83,87,],[-23,-22,-20,-21,72,72,72,]),'$end':([1,44,],[0,-1,]),'MNIQ':([8,22,24,31,52,83,87,],[-23,-22,-20,-21,66,66,66,]),'STRING':([4,8,9,10,12,13,17,22,24,25,26,27,31,45,53,54,78,85,92,101,105,106,],[16,-23,16,16,16,16,16,-22,-20,16,16,-12,-21,16,-16,-35,-17,16,16,-27,-33,-34,]),'DIVI':([8,11,21,22,24,31,48,59,78,79,80,89,],[-23,37,-21,-22,-20,-21,37,-18,-17,37,37,-19,]),'COMILLA':([47,77,],[60,89,]),'TOKEN_ASIG':([8,22,24,30,31,48,57,59,61,62,78,79,80,86,88,89,90,91,104,],[-23,-22,-20,53,-21,-49,75,-18,78,-26,-17,-49,-49,96,-29,-19,-24,-25,-30,]),'COMA':([8,22,24,31,48,59,78,79,80,89,],[-23,-22,-20,-21,63,-18,-17,63,63,-19,]),'CIC_DO':([4,8,9,10,12,13,17,22,24,25,26,27,31,45,53,54,78,85,92,101,105,106,],[19,-23,19,19,19,19,19,-22,-20,19,19,-12,-21,19,-16,-35,-17,19,19,-27,-33,-34,]),'CIC_FOR':([4,8,9,10,12,13,17,22,24,25,26,27,31,45,53,54,78,85,92,101,105,106,],[20,-23,20,20,20,20,20,-22,-20,20,20,-12,-21,20,-16,-35,-17,20,20,-27,-33,-34,]),'ID':([2,4,5,7,8,9,10,12,13,14,16,17,22,23,24,25,26,27,29,31,36,37,38,39,40,45,46,47,53,54,60,63,64,66,67,68,69,70,71,72,75,76,78,85,92,93,94,96,97,101,105,106,],[3,21,28,31,-23,21,21,21,21,-13,-15,21,-22,-14,-20,21,21,-12,52,-21,-39,-42,-41,-40,31,21,58,31,-16,-35,77,28,31,-45,-48,-44,31,-46,-43,-47,87,31,-17,21,21,31,52,31,31,-27,-33,-34,]),'MAS':([8,11,21,22,24,31,48,59,78,79,80,89,102,107,],[-23,36,-21,-22,-20,-21,36,-18,-17,36,36,-19,107,109,]),'COND_THEN':([65,],[81,]),'NUM_INTEGER':([4,7,8,9,10,12,13,17,22,24,25,26,27,31,36,37,38,39,40,45,47,53,54,64,66,67,68,69,70,71,72,76,78,85,92,93,96,97,101,105,106,],[22,22,-23,22,22,22,22,22,-22,-20,22,22,-12,-21,-39,-42,-41,-40,22,22,22,-16,-35,22,-45,-48,-44,22,-46,-43,-47,22,-17,22,22,22,22,22,-27,-33,-34,]),'DOUBLE':([4,8,9,10,12,13,17,22,24,25,26,27,31,45,53,54,78,85,92,101,105,106,],[23,-23,23,23,23,23,23,-22,-20,23,23,-12,-21,23,-16,-35,-17,23,23,-27,-33,-34,]),'LLAVE_ABRE':([3,19,74,81,],[4,45,85,92,]),'MENOS':([8,11,21,22,24,31,48,59,78,79,80,89,102,108,],[-23,39,-21,-22,-20,-21,39,-18,-17,39,39,-19,108,110,]),'PAREN_CIERRA':([8,22,24,31,51,56,82,83,99,100,103,109,110,],[-23,-22,-20,-21,65,74,-36,-38,-37,106,-28,-31,-32,]),'PRINCIPAL':([0,],[2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'tipod':([4,9,10,12,13,17,25,26,45,85,92,],[5,5,5,5,5,5,5,5,5,5,5,]),'num':([4,7,9,10,12,13,17,25,26,40,45,47,64,69,76,85,92,93,96,97,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'oparit':([11,48,79,80,],[40,64,64,64,]),'asig':([4,5,9,10,12,13,17,25,26,45,63,85,92,],[9,27,9,9,9,9,9,9,9,9,79,9,9,]),'res':([4,9,10,12,13,17,25,26,45,85,92,],[10,10,10,10,10,10,10,10,10,10,10,]),'idnum':([4,7,9,10,12,13,17,25,26,40,45,47,64,69,76,85,92,93,96,97,],[11,30,11,11,11,11,11,11,11,54,11,59,80,83,88,11,11,83,102,104,]),'dhacer':([4,9,10,12,13,17,25,26,45,85,92,],[12,12,12,12,12,12,12,12,12,12,12,]),'program':([0,],[1,]),'sif':([4,9,10,12,13,17,25,26,45,85,92,],[13,13,13,13,13,13,13,13,13,13,13,]),'inicio':([46,],[57,]),'indec':([96,],[103,]),'fin':([75,],[86,]),'empty':([4,9,10,12,13,17,25,26,45,48,79,80,85,92,],[15,33,33,33,33,33,33,33,15,62,62,62,15,15,]),'para':([4,9,10,12,13,17,25,26,45,85,92,],[17,17,17,17,17,17,17,17,17,17,17,]),'cuerpo2':([9,10,12,13,17,25,26,],[32,35,41,42,43,49,50,]),'cuerpo':([4,9,10,12,13,17,25,26,45,85,92,],[18,34,34,34,34,34,34,34,55,95,98,]),'condicion':([29,94,],[51,100,]),'oprel':([52,83,87,],[69,93,97,]),'masasig':([48,79,80,],[61,90,91,]),'condicionpara':([46,],[56,]),'mascondicion':([69,93,],[82,99,]),'declaracion':([4,9,10,12,13,17,25,26,45,85,92,],[25,25,25,25,25,25,25,25,25,25,25,]),'println':([4,9,10,12,13,17,25,26,45,85,92,],[26,26,26,26,26,26,26,26,26,26,26,]),'tipoasig':([21,28,],[48,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PRINCIPAL ID LLAVE_ABRE cuerpo LLAVE_CIERRA','program',5,'p_program','sintactico.py',17),
  ('cuerpo -> declaracion cuerpo2','cuerpo',2,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> asig cuerpo2','cuerpo',2,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> println cuerpo2','cuerpo',2,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> para cuerpo2','cuerpo',2,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> sif cuerpo2','cuerpo',2,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> dhacer cuerpo2','cuerpo',2,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> res cuerpo2','cuerpo',2,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> empty','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('cuerpo2 -> cuerpo','cuerpo2',1,'p_cuerpo2','sintactico.py',41),
  ('cuerpo2 -> empty','cuerpo2',1,'p_cuerpo2','sintactico.py',42),
  ('declaracion -> tipod asig','declaracion',2,'p_declaracion','sintactico.py',46),
  ('tipod -> INTEGER','tipod',1,'p_tipod','sintactico.py',50),
  ('tipod -> DOUBLE','tipod',1,'p_tipod','sintactico.py',51),
  ('tipod -> STRING','tipod',1,'p_tipod','sintactico.py',52),
  ('println -> PRINTLN idnum TOKEN_ASIG','println',3,'p_println','sintactico.py',56),
  ('asig -> ID tipoasig masasig TOKEN_ASIG','asig',4,'p_asig','sintactico.py',60),
  ('tipoasig -> IGUAL idnum','tipoasig',2,'p_tipoasig','sintactico.py',64),
  ('tipoasig -> IGUAL COMILLA ID COMILLA','tipoasig',4,'p_tipoasig','sintactico.py',65),
  ('idnum -> num','idnum',1,'p_idnum','sintactico.py',72),
  ('idnum -> ID','idnum',1,'p_idnum','sintactico.py',73),
  ('num -> NUM_INTEGER','num',1,'p_num','sintactico.py',80),
  ('num -> NUM_DOUBLE','num',1,'p_num','sintactico.py',81),
  ('masasig -> COMA asig masasig','masasig',3,'p_masasig','sintactico.py',85),
  ('masasig -> oparit idnum masasig','masasig',3,'p_masasig','sintactico.py',86),
  ('masasig -> empty','masasig',1,'p_masasig','sintactico.py',87),
  ('para -> CIC_FOR PAREN_ABRE condicionpara PAREN_CIERRA LLAVE_ABRE cuerpo LLAVE_CIERRA','para',7,'p_para','sintactico.py',96),
  ('condicionpara -> inicio TOKEN_ASIG fin TOKEN_ASIG indec','condicionpara',5,'p_condicionpara','sintactico.py',100),
  ('inicio -> ID IGUAL idnum','inicio',3,'p_inicio','sintactico.py',104),
  ('fin -> ID oprel idnum','fin',3,'p_fin','sintactico.py',108),
  ('indec -> idnum MAS MAS','indec',3,'p_indec','sintactico.py',112),
  ('indec -> idnum MENOS MENOS','indec',3,'p_indec','sintactico.py',113),
  ('sif -> COND_IF PAREN_ABRE condicion PAREN_CIERRA COND_THEN LLAVE_ABRE cuerpo LLAVE_CIERRA','sif',8,'p_sif','sintactico.py',118),
  ('dhacer -> CIC_DO LLAVE_ABRE cuerpo LLAVE_CIERRA CIC_WHILE PAREN_ABRE condicion PAREN_CIERRA','dhacer',8,'p_dhacer','sintactico.py',122),
  ('res -> idnum oparit idnum','res',3,'p_res','sintactico.py',126),
  ('condicion -> ID oprel mascondicion','condicion',3,'p_condicion','sintactico.py',130),
  ('mascondicion -> idnum oprel mascondicion','mascondicion',3,'p_mascondicion','sintactico.py',134),
  ('mascondicion -> idnum','mascondicion',1,'p_mascondicion','sintactico.py',135),
  ('oparit -> MAS','oparit',1,'p_oparit','sintactico.py',142),
  ('oparit -> MENOS','oparit',1,'p_oparit','sintactico.py',143),
  ('oparit -> MULTI','oparit',1,'p_oparit','sintactico.py',144),
  ('oparit -> DIVI','oparit',1,'p_oparit','sintactico.py',145),
  ('oprel -> MNQ','oprel',1,'p_oprel','sintactico.py',149),
  ('oprel -> MYQ','oprel',1,'p_oprel','sintactico.py',150),
  ('oprel -> MNIQ','oprel',1,'p_oprel','sintactico.py',151),
  ('oprel -> MYIQ','oprel',1,'p_oprel','sintactico.py',152),
  ('oprel -> EQ','oprel',1,'p_oprel','sintactico.py',153),
  ('oprel -> DIST','oprel',1,'p_oprel','sintactico.py',154),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',158),
]
